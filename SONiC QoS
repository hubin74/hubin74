## SONiC Switch QoS Setting

`sonic-qos.ts` generates QoS configuration for [SONiC](https://github.com/sonic-net/SONiC) Ethernet switches.

* `--port-gnb`: SONiC switchport connected to gNB
  * this flag is repeatable if there are multiple gNBs
* `--port-upf1`: SONiC switchport connected to UPF1
* `--port-upf4`: SONiC switchport connected to UPF4
* `--dl-gnb`: maximum downlink rate toward each gNB in Mbps
* `--dl-sched`: downlink scheduler type
  * `--dl-sched=STRICT`: strict priority - UPF4 has higher priority than UPF1
  * `--dl-sched=WRR`: Weighted Round Robin algorithm
  * `--dl-sched=DWRR`: Deficit Weighted Round Robin algorithm
* `--dl-w1`: weight for UPF1-to-gNB traffic, integer between 1 and 100
* `--dl-w4`: weight for UPF4-to-gNB traffic, integer between 1 and 100
  * effective with WRR or DWRR scheduler type
* `--format`: output format
  * `--format=patch`: print JSON patch (default)
  * `--format=pretty`: pretty-print JSON patch
  * `--format=shell`: print SONiC shell command that applies the patch

```bash
# define variables for switch ports
SWPORT_GNB0=Ethernet8
SWPORT_UPF1=Ethernet0
SWPORT_UPF4=Ethernet1

# generate SONiC config
./node_modules/.bin/tsx 20231017/sonic-qos.ts --format=shell \
  --port-gnb=$SWPORT_GNB0 --port-upf1=$SWPORT_UPF1 --port-upf4=$SWPORT_UPF4 \
  --dl-gnb=2000 --dl-sched=STRICT

./node_modules/.bin/tsx 20231017/sonic-qos.ts --format=shell \
  --port-gnb=$SWPORT_GNB0 --port-upf1=$SWPORT_UPF1 --port-upf4=$SWPORT_UPF4 \
  --dl-gnb=2000 --dl-sched=DWRR --dl-w1=20 --dl-w4=80
```
           
./node_modules/.bin/tsx 20231017/sonic-qos.ts --format=shell \
>   --port-gnb=$SWPORT_GNB0 --port-upf1=$SWPORT_UPF1 --port-upf4=$SWPORT_UPF4 \
>   --dl-gnb=2000 --dl-sched=DWRR --dl-w1=20 --dl-w4=80
echo '[{"op":"add","path":"/QUEUE","value":{}},{"op":"add","path":"/SCHEDULER","value":{}},{"op":"add","path":"/PORT_QOS_MAP","value":{}},{"op":"add","path":"/DOT1P_TO_TC_MAP","value":{}},{"op":"add","path":"/DOT1P_TO_TC_MAP/5gdeploy-20231017-upf1","value":{"0":"1"}},{"op":"add","path":"/PORT_QOS_MAP/Ethernet1","value":{"dot1p_to_tc_map":"5gdeploy-20231017-upf1"}},{"op":"add","path":"/DOT1P_TO_TC_MAP/5gdeploy-20231017-upf4","value":{"0":"0"}},{"op":"add","path":"/PORT_QOS_MAP/Ethernet0","value":{"dot1p_to_tc_map":"5gdeploy-20231017-upf4"}},{"op":"add","path":"/SCHEDULER/5gdeploy-20231017-gnb0","value":{"type":"STRICT","meter_type":"bytes","pir":"250000000","pbs":"8192"}},{"op":"add","path":"/PORT_QOS_MAP/Ethernet48","value":{"scheduler":"5gdeploy-20231017-gnb0"}},{"op":"add","path":"/SCHEDULER/5gdeploy-20231017-gnb0upf1","value":{"type":"DWRR","weight":"20"}},{"op":"add","path":"/QUEUE/Ethernet48|1","value":{"scheduler":"5gdeploy-20231017-gnb0upf1"}},{"op":"add","path":"/SCHEDULER/5gdeploy-20231017-gnb0upf4","value":{"type":"DWRR","weight":"80"}},{"op":"add","path":"/QUEUE/Ethernet48|0","value":{"scheduler":"5gdeploy-20231017-gnb0upf4"}}]' | sudo config apply /dev/stdin
